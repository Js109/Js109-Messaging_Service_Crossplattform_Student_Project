stages:
  - build
  - deploy
  - test

.automotive-setup: &automotive-setup
  image: openjdk:8-jdk

  variables:
    ANDROID_COMPILE_SDK: "28"
    ANDROID_BUILD_TOOLS: "28.0.2"
    ANDROID_SDK_TOOLS:   "4333796"

  before_script:
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    - chmod +x automotive-frontend/gradlew
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail
    # navigate into project folder
    - cd automotive-frontend

  only:
    changes:
      - automotive-frontend/**/*

build-android:assemble:
  <<: *automotive-setup
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - automotive/build/outputs/

test-android:
  <<: *automotive-setup
  stage: test
  script:
    - ./gradlew -Pci --console=plain :automotive:testLocalbackendRelease

.test-android:lint:
  <<: *automotive-setup
  stage: test
  script:
    - ./gradlew -Pci --console=plain :automotive:lintLocalbackendRelease -PbuildDir=lint

.backend-setup: &backend-setup
  image: openjdk:11.0.5
  before_script:
    - chmod +x backend/gradlew
  only:
    changes:
      - backend/**/*

build-backend:
  <<: *backend-setup
  stage: build
  script:
    - cd backend/
    - ./gradlew bootJar

test-backend:
  <<: *backend-setup
  stage: test
  script:
    - cd backend/
    - ./gradlew test
  needs: ["build-backend"]

.webview-setup: &webview-setup
  variables:
    CLI_VERSION: 10.0.8
  image: trion/ng-cli-e2e:${CLI_VERSION}
  before_script:
    - cd webview/
    - npm ci
  only:
    changes:
      - webview/**/*

build-webview:
  <<: *webview-setup
  stage: build
  script:
    - ng build --prod

.test-webview:karma:
  <<: *webview-setup
  stage: test
  allow_failure: false
  script:
    - ng test --progress false --watch false

.test-webview:e2e:
  <<: *webview-setup
  stage: test
  allow_failure: false
  script:
    - ng e2e

.test-webview:ngLint:
  <<: *webview-setup
  stage: test
  script:
    - ng lint